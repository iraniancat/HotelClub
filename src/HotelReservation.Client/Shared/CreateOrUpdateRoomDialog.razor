@using HotelReservation.Application.DTOs.Room
@* مسیر پیشنهادی: src/HotelReservation.Client/Shared/CreateOrUpdateRoomDialog.razor *@
@inject IApiClientService ApiClient
@inject ISnackbar Snackbar

<MudDialog>
    <TitleContent>
        <MudText Typo="Typo.h6">
            <MudIcon Icon="@(_isEditMode ? Icons.Material.Filled.Edit : Icons.Material.Filled.Add)" Class="me-3"/> @(_isEditMode ? "ویرایش اتاق" : "ایجاد اتاق جدید")
        </MudText>
    </TitleContent>
    <DialogContent>
        <MudForm @ref="_form" @bind-IsValid="_isFormValid" Model="@_roomModel">
            <DataAnnotationsValidator />
            <MudGrid Spacing="2">
                <MudItem xs="12">
                    <MudTextField T="string" Label="شماره/نام اتاق" @bind-value="_roomModel.RoomNumber"
                                  For="@(() => _roomModel.RoomNumber)" Required="true" RequiredError="شماره اتاق الزامی است." />
                </MudItem>
                <MudItem xs="12" sm="6">
                    <MudNumericField @bind-Value="_roomModel.Capacity" Label="ظرفیت (نفر)" Required="true" Min="1" Max="10" />
                </MudItem>
                <MudItem xs="12" sm="6">
                     <MudNumericField @bind-Value="_roomModel.PricePerNight" Label="قیمت هر شب (تومان)" Required="true" Min="1" />
                </MudItem>
                <MudItem xs="12">
                    <MudSwitch @bind-Checked="_roomModel.IsActive" Color="Color.Primary">اتاق فعال است</MudSwitch>
                </MudItem>
            </MudGrid>
        </MudForm>
    </DialogContent>
    <DialogActions>
        <MudButton OnClick="Cancel">انصراف</MudButton>
        <MudButton Color="Color.Primary" Variant="Variant.Filled" OnClick="SubmitAsync" Disabled="!_isFormValid || _isProcessing">
            @if (_isProcessing)
            {
                <MudProgressCircular Indeterminate="true" Size="Size.Small" />
            }
            else
            {
                <MudText>@(_isEditMode ? "ذخیره تغییرات" : "ایجاد اتاق")</MudText>
            }
        </MudButton>
    </DialogActions>
</MudDialog>

@code {
    [CascadingParameter] MudDialogInstance MudDialog { get; set; } = default!;
    [Parameter] public Guid? HotelId { get; set; } // برای ایجاد
    [Parameter] public RoomDto? RoomToEdit { get; set; } // برای ویرایش

    private CreateOrUpdateRoomDto _roomModel = new();
    private MudForm? _form;
    private bool _isFormValid;
    private bool _isProcessing = false;
    private bool _isEditMode => RoomToEdit != null;

    protected override void OnInitialized()
    {
        if (_isEditMode)
        {
            // حالت ویرایش
            _roomModel = new CreateOrUpdateRoomDto
            {
                RoomNumber = RoomToEdit!.RoomNumber,
                Capacity = RoomToEdit.Capacity,
                PricePerNight = RoomToEdit.PricePerNight,
                IsActive = RoomToEdit.IsActive,
                HotelId = RoomToEdit.HotelId // این فیلد در DTO هست اما در PUT استفاده نمی‌شود
            };
        }
        else
        {
            // حالت ایجاد
            if (HotelId.HasValue)
            {
                _roomModel.HotelId = HotelId.Value;
            }
            else
            {
                 // این حالت نباید رخ دهد چون HotelId از صفحه اصلی پاس داده می‌شود
                Snackbar.Add("خطا: شناسه هتل برای ایجاد اتاق مشخص نشده است.", Severity.Error);
                Cancel();
            }
        }
    }

    private async Task SubmitAsync()
    {
        await _form!.Validate();
        if (!_isFormValid) return;

        _isProcessing = true;
        try
        {
            if (_isEditMode)
            {
                await ApiClient.PutAsync($"api/rooms/{RoomToEdit!.Id}", _roomModel);
            }
            else
            {
                await ApiClient.PostAsync<CreateOrUpdateRoomDto, RoomDto>("api/rooms", _roomModel);
            }
            MudDialog.Close(DialogResult.Ok(true));
        }
        catch (ApplicationException ex)
        {
            Snackbar.Add($"خطا: {ex.Message}", Severity.Error);
        }
        finally
        {
            _isProcessing = false;
        }
    }

    void Cancel() => MudDialog.Cancel();
}
