@* مسیر پیشنهادی: src/HotelReservation.Client/Shared/SetUserPasswordDialog.razor *@
@inject IApiClientService ApiClient
@inject ISnackbar Snackbar

<MudDialog>
    <TitleContent>
        <MudText Typo="Typo.h6">
            <MudIcon Icon="@Icons.Material.Filled.Password" Class="me-3"/> تغییر رمز عبور کاربر
        </MudText>
    </TitleContent>
    <DialogContent>
        <MudForm @ref="_form" @bind-IsValid="_isFormValid" Model="@_setPasswordModel">
            <DataAnnotationsValidator />
            <MudGrid>
                <MudItem xs="12">
                     <MudTextField T="string" Label="رمز عبور جدید" @bind-Value="_setPasswordModel.NewPassword"
                                  For="@(() => _setPasswordModel.NewPassword)" Required="true" RequiredError="رمز عبور جدید الزامی است."
                                  InputType="_isPasswordVisible ? InputType.Text : InputType.Password"
                                  Adornment="Adornment.End" AdornmentIcon="@(_isPasswordVisible ? Icons.Material.Filled.VisibilityOff : Icons.Material.Filled.Visibility)"
                                  OnAdornmentClick="() => _isPasswordVisible = !_isPasswordVisible" />
                </MudItem>
                <MudItem xs="12">
                     <MudTextField T="string" Label="تکرار رمز عبور جدید" @bind-Value="_setPasswordModel.ConfirmPassword"
                                  For="@(() => _setPasswordModel.ConfirmPassword)" Required="true" RequiredError="تکرار رمز عبور الزامی است."
                                  InputType="InputType.Password" />
                </MudItem>
            </MudGrid>
        </MudForm>
    </DialogContent>
    <DialogActions>
        <MudButton OnClick="Cancel">انصراف</MudButton>
        <MudButton Color="Color.Primary" Variant="Variant.Filled" OnClick="SubmitAsync" Disabled="!_isFormValid || _isProcessing">
            @if (_isProcessing)
            {
                <MudProgressCircular Indeterminate="true" Size="Size.Small" />
                <MudText Class="ms-2">در حال ذخیره...</MudText>
            }
            else
            {
                <MudText>تنظیم رمز جدید</MudText>
            }
        </MudButton>
    </DialogActions>
</MudDialog>

@code {
    [CascadingParameter] MudDialogInstance MudDialog { get; set; } = default!;

    [Parameter] public Guid UserId { get; set; }

    private SetUserPasswordDto _setPasswordModel = new SetUserPasswordDto();
    private MudForm? _form;
    private bool _isFormValid;
    private bool _isProcessing = false;
    private bool _isPasswordVisible;

    private async Task SubmitAsync()
    {
        await _form!.Validate();
        if (!_isFormValid)
        {
            Snackbar.Add("لطفاً خطاهای فرم را برطرف نمایید.", Severity.Warning);
            return;
        }

        _isProcessing = true;
        try
        {
            await ApiClient.PutAsync($"api/management/users/{UserId}/set-password", _setPasswordModel);
            
            MudDialog.Close(DialogResult.Ok(true));
        }
        catch (ApplicationException ex)
        {
            Snackbar.Add($"خطا: {ex.Message}", Severity.Error);
        }
        catch (Exception ex)
        {
            Snackbar.Add("خطای پیش‌بینی نشده در هنگام تغییر رمز عبور رخ داد.", Severity.Error);
            Console.WriteLine($"Unexpected error setting user password: {ex}");
        }
        finally
        {
            _isProcessing = false;
        }
    }

    void Cancel() => MudDialog.Cancel();
}
